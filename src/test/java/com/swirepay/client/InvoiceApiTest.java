/*
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swirepay.client;

import com.swirepay.client.model.InvoiceListResponse;
import com.swirepay.client.model.InvoiceRequest;
import com.swirepay.client.model.InvoiceResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoiceApi
 */
@Ignore
public class InvoiceApiTest {

    private final InvoiceApi api = new InvoiceApi();

    
    /**
     * Add a new invoice
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInvoiceTest() {
        InvoiceRequest invoiceRequest = null;
        InvoiceResponse response = api.addInvoice(invoiceRequest);

        // TODO: test validations
    }
    
    /**
     * Get All Invoices
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllInvoicesTest() {
        Integer page = null;
        Integer size = null;
        InvoiceListResponse response = api.getAllInvoices(page, size);

        // TODO: test validations
    }
    
    /**
     * Get invoice by Gid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInvoiceByGidTest() {
        String gid = null;
        InvoiceResponse response = api.getInvoiceByGid(gid);

        // TODO: test validations
    }
    
    /**
     * pay for invoice
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void payInvoiceTest() {
        String gid = null;
        InvoiceRequest invoiceRequest = null;
        InvoiceResponse response = api.payInvoice(gid, invoiceRequest);

        // TODO: test validations
    }
    
    /**
     * Update invoice to active
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInvoiceActiveTest() {
        String gid = null;
        InvoiceRequest invoiceRequest = null;
        InvoiceResponse response = api.updateInvoiceActive(gid, invoiceRequest);

        // TODO: test validations
    }
    
    /**
     * Update invoice to draft
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateInvoiceDraftTest() {
        String gid = null;
        InvoiceRequest invoiceRequest = null;
        InvoiceResponse response = api.updateInvoiceDraft(gid, invoiceRequest);

        // TODO: test validations
    }
    
}
