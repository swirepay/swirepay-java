/*
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swirepay.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PaymentSessionRequest
 */
public class PaymentSessionRequestTest {
    private final PaymentSessionRequest model = new PaymentSessionRequest();

    /**
     * Model tests for PaymentSessionRequest
     */
    @Test
    public void testPaymentSessionRequest() {
        // TODO: test PaymentSessionRequest
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'amountRefunded'
     */
    @Test
    public void amountRefundedTest() {
        // TODO: test amountRefunded
    }

    /**
     * Test the property 'statementDescriptor'
     */
    @Test
    public void statementDescriptorTest() {
        // TODO: test statementDescriptor
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'paymentMethodType'
     */
    @Test
    public void paymentMethodTypeTest() {
        // TODO: test paymentMethodType
    }

    /**
     * Test the property 'customerGid'
     */
    @Test
    public void customerGidTest() {
        // TODO: test customerGid
    }

    /**
     * Test the property 'paymentMethodGid'
     */
    @Test
    public void paymentMethodGidTest() {
        // TODO: test paymentMethodGid
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'receiptEmail'
     */
    @Test
    public void receiptEmailTest() {
        // TODO: test receiptEmail
    }

    /**
     * Test the property 'receiptSms'
     */
    @Test
    public void receiptSmsTest() {
        // TODO: test receiptSms
    }

    /**
     * Test the property 'confirmMethod'
     */
    @Test
    public void confirmMethodTest() {
        // TODO: test confirmMethod
    }

    /**
     * Test the property 'captureMethod'
     */
    @Test
    public void captureMethodTest() {
        // TODO: test captureMethod
    }

    /**
     * Test the property 'refundReason'
     */
    @Test
    public void refundReasonTest() {
        // TODO: test refundReason
    }

    /**
     * Test the property 'refundNote'
     */
    @Test
    public void refundNoteTest() {
        // TODO: test refundNote
    }

    /**
     * Test the property 'receiptNumber'
     */
    @Test
    public void receiptNumberTest() {
        // TODO: test receiptNumber
    }

    /**
     * Test the property 'mrn'
     */
    @Test
    public void mrnTest() {
        // TODO: test mrn
    }

}
