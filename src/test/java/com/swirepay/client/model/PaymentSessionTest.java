/*
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swirepay.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.swirepay.client.model.AccountRate;
import com.swirepay.client.model.Currency;
import com.swirepay.client.model.Customer;
import com.swirepay.client.model.PaymentMethod;
import com.swirepay.client.model.PaymentMethodType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PaymentSession
 */
public class PaymentSessionTest {
    private final PaymentSession model = new PaymentSession();

    /**
     * Model tests for PaymentSession
     */
    @Test
    public void testPaymentSession() {
        // TODO: test PaymentSession
    }

    /**
     * Test the property 'gid'
     */
    @Test
    public void gidTest() {
        // TODO: test gid
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    public void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'amountRefunded'
     */
    @Test
    public void amountRefundedTest() {
        // TODO: test amountRefunded
    }

    /**
     * Test the property 'amountUnCaptured'
     */
    @Test
    public void amountUnCapturedTest() {
        // TODO: test amountUnCaptured
    }

    /**
     * Test the property 'amountReceived'
     */
    @Test
    public void amountReceivedTest() {
        // TODO: test amountReceived
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'statementDescriptor'
     */
    @Test
    public void statementDescriptorTest() {
        // TODO: test statementDescriptor
    }

    /**
     * Test the property 'receiptEmail'
     */
    @Test
    public void receiptEmailTest() {
        // TODO: test receiptEmail
    }

    /**
     * Test the property 'receiptSms'
     */
    @Test
    public void receiptSmsTest() {
        // TODO: test receiptSms
    }

    /**
     * Test the property 'confirmMethod'
     */
    @Test
    public void confirmMethodTest() {
        // TODO: test confirmMethod
    }

    /**
     * Test the property 'captureMethod'
     */
    @Test
    public void captureMethodTest() {
        // TODO: test captureMethod
    }

    /**
     * Test the property 'errorCode'
     */
    @Test
    public void errorCodeTest() {
        // TODO: test errorCode
    }

    /**
     * Test the property 'errorDescription'
     */
    @Test
    public void errorDescriptionTest() {
        // TODO: test errorDescription
    }

    /**
     * Test the property 'refundReason'
     */
    @Test
    public void refundReasonTest() {
        // TODO: test refundReason
    }

    /**
     * Test the property 'refundNote'
     */
    @Test
    public void refundNoteTest() {
        // TODO: test refundNote
    }

    /**
     * Test the property 'disputeType'
     */
    @Test
    public void disputeTypeTest() {
        // TODO: test disputeType
    }

    /**
     * Test the property 'disputeStatus'
     */
    @Test
    public void disputeStatusTest() {
        // TODO: test disputeStatus
    }

    /**
     * Test the property 'respondBy'
     */
    @Test
    public void respondByTest() {
        // TODO: test respondBy
    }

    /**
     * Test the property 'paymentDate'
     */
    @Test
    public void paymentDateTest() {
        // TODO: test paymentDate
    }

    /**
     * Test the property 'refundDate'
     */
    @Test
    public void refundDateTest() {
        // TODO: test refundDate
    }

    /**
     * Test the property 'disputeDate'
     */
    @Test
    public void disputeDateTest() {
        // TODO: test disputeDate
    }

    /**
     * Test the property 'amountDisputed'
     */
    @Test
    public void amountDisputedTest() {
        // TODO: test amountDisputed
    }

    /**
     * Test the property 'disputeFee'
     */
    @Test
    public void disputeFeeTest() {
        // TODO: test disputeFee
    }

    /**
     * Test the property 'feeAmount'
     */
    @Test
    public void feeAmountTest() {
        // TODO: test feeAmount
    }

    /**
     * Test the property 'feeTax'
     */
    @Test
    public void feeTaxTest() {
        // TODO: test feeTax
    }

    /**
     * Test the property 'net'
     */
    @Test
    public void netTest() {
        // TODO: test net
    }

    /**
     * Test the property 'mdr'
     */
    @Test
    public void mdrTest() {
        // TODO: test mdr
    }

    /**
     * Test the property 'receiptNumber'
     */
    @Test
    public void receiptNumberTest() {
        // TODO: test receiptNumber
    }

    /**
     * Test the property 'nextActionUrl'
     */
    @Test
    public void nextActionUrlTest() {
        // TODO: test nextActionUrl
    }

    /**
     * Test the property 'psClientSecret'
     */
    @Test
    public void psClientSecretTest() {
        // TODO: test psClientSecret
    }

    /**
     * Test the property 'authorizationId'
     */
    @Test
    public void authorizationIdTest() {
        // TODO: test authorizationId
    }

    /**
     * Test the property 'returnUrl'
     */
    @Test
    public void returnUrlTest() {
        // TODO: test returnUrl
    }

    /**
     * Test the property 'secureStatus'
     */
    @Test
    public void secureStatusTest() {
        // TODO: test secureStatus
    }

    /**
     * Test the property 'paymentLinkId'
     */
    @Test
    public void paymentLinkIdTest() {
        // TODO: test paymentLinkId
    }

    /**
     * Test the property 'paymentLinkGid'
     */
    @Test
    public void paymentLinkGidTest() {
        // TODO: test paymentLinkGid
    }

    /**
     * Test the property 'mrn'
     */
    @Test
    public void mrnTest() {
        // TODO: test mrn
    }

    /**
     * Test the property 'rrn'
     */
    @Test
    public void rrnTest() {
        // TODO: test rrn
    }

    /**
     * Test the property 'paymentMethodType'
     */
    @Test
    public void paymentMethodTypeTest() {
        // TODO: test paymentMethodType
    }

    /**
     * Test the property 'paymentMethod'
     */
    @Test
    public void paymentMethodTest() {
        // TODO: test paymentMethod
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'accountRate'
     */
    @Test
    public void accountRateTest() {
        // TODO: test accountRate
    }

}
