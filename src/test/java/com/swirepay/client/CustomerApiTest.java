/*
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swirepay.client;

import com.swirepay.client.model.CustomerListResponse;
import com.swirepay.client.model.CustomerRequest;
import com.swirepay.client.model.CustomerResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerApi
 */
@Ignore
public class CustomerApiTest {

    private final CustomerApi api = new CustomerApi();

    
    /**
     * Add a new customer
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCustomerTest() {
        CustomerRequest customerRequest = null;
        CustomerResponse response = api.addCustomer(customerRequest);

        // TODO: test validations
    }
    
    /**
     * Delete customer by Gid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCustomerByGidTest() {
        String gid = null;
        api.deleteCustomerByGid(gid);

        // TODO: test validations
    }
    
    /**
     * Get all customers
     *
     * Get customers
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllCustomersTest() {
        Integer page = null;
        Integer size = null;
        CustomerListResponse response = api.getAllCustomers(page, size);

        // TODO: test validations
    }
    
    /**
     * Get Customer by Gid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCustomerByGidTest() {
        String gid = null;
        CustomerResponse response = api.getCustomerByGid(gid);

        // TODO: test validations
    }
    
    /**
     * Update Customer by Gid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomerTest() {
        String gid = null;
        CustomerRequest customerRequest = null;
        CustomerResponse response = api.updateCustomer(gid, customerRequest);

        // TODO: test validations
    }
    
}
