/*
 * Swirepay API
 * Swirepay REST APIs' are resource-oriented URLs that accept JSON-encoded request bodies, return JSON-encoded responses, and use standard HTTP response codes, authentication, and verbs. You can use the Swirepay API in test mode, which does not affect your live data or interact with the banking networks. The `API key` you use to authenticate the request determines whether the request is live mode or test mode.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swirepay.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.swirepay.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.swirepay.client.model.AddressRequest;
import com.swirepay.client.model.InvoicelineItemRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * InvoiceRequest
 */
@JsonPropertyOrder({
  InvoiceRequest.JSON_PROPERTY_CURRENCY_CODE,
  InvoiceRequest.JSON_PROPERTY_CUSTOMER_GID,
  InvoiceRequest.JSON_PROPERTY_NOTE,
  InvoiceRequest.JSON_PROPERTY_ISSUE_DATE,
  InvoiceRequest.JSON_PROPERTY_CUSTOMER_NOTE,
  InvoiceRequest.JSON_PROPERTY_DAYS_UNTIL_DUE,
  InvoiceRequest.JSON_PROPERTY_STATUS,
  InvoiceRequest.JSON_PROPERTY_DESCRIPTION,
  InvoiceRequest.JSON_PROPERTY_STATEMENT_DESCRIPTOR,
  InvoiceRequest.JSON_PROPERTY_BILLING_ADDRESS,
  InvoiceRequest.JSON_PROPERTY_SHIPPING_ADDRESS,
  InvoiceRequest.JSON_PROPERTY_INVOICE_LINE_ITEMS
})
@JsonTypeName("InvoiceRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-05T05:32:04.002Z[Etc/UTC]")
public class InvoiceRequest {
  public static final String JSON_PROPERTY_CURRENCY_CODE = "currencyCode";
  private String currencyCode;

  public static final String JSON_PROPERTY_CUSTOMER_GID = "customerGid";
  private String customerGid;

  public static final String JSON_PROPERTY_NOTE = "note";
  private String note;

  public static final String JSON_PROPERTY_ISSUE_DATE = "issueDate";
  private String issueDate;

  public static final String JSON_PROPERTY_CUSTOMER_NOTE = "customerNote";
  private String customerNote;

  public static final String JSON_PROPERTY_DAYS_UNTIL_DUE = "daysUntilDue";
  private Integer daysUntilDue;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_STATEMENT_DESCRIPTOR = "statementDescriptor";
  private String statementDescriptor;

  public static final String JSON_PROPERTY_BILLING_ADDRESS = "billingAddress";
  private AddressRequest billingAddress;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shippingAddress";
  private AddressRequest shippingAddress;

  public static final String JSON_PROPERTY_INVOICE_LINE_ITEMS = "invoiceLineItems";
  private List<InvoicelineItemRequest> invoiceLineItems = new ArrayList<>();


  public InvoiceRequest currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public InvoiceRequest customerGid(String customerGid) {
    
    this.customerGid = customerGid;
    return this;
  }

   /**
   * Get customerGid
   * @return customerGid
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_GID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCustomerGid() {
    return customerGid;
  }


  public void setCustomerGid(String customerGid) {
    this.customerGid = customerGid;
  }


  public InvoiceRequest note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public InvoiceRequest issueDate(String issueDate) {
    
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIssueDate() {
    return issueDate;
  }


  public void setIssueDate(String issueDate) {
    this.issueDate = issueDate;
  }


  public InvoiceRequest customerNote(String customerNote) {
    
    this.customerNote = customerNote;
    return this;
  }

   /**
   * Get customerNote
   * @return customerNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CUSTOMER_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCustomerNote() {
    return customerNote;
  }


  public void setCustomerNote(String customerNote) {
    this.customerNote = customerNote;
  }


  public InvoiceRequest daysUntilDue(Integer daysUntilDue) {
    
    this.daysUntilDue = daysUntilDue;
    return this;
  }

   /**
   * Get daysUntilDue
   * @return daysUntilDue
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DAYS_UNTIL_DUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDaysUntilDue() {
    return daysUntilDue;
  }


  public void setDaysUntilDue(Integer daysUntilDue) {
    this.daysUntilDue = daysUntilDue;
  }


  public InvoiceRequest status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public InvoiceRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public InvoiceRequest statementDescriptor(String statementDescriptor) {
    
    this.statementDescriptor = statementDescriptor;
    return this;
  }

   /**
   * Get statementDescriptor
   * @return statementDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATEMENT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatementDescriptor() {
    return statementDescriptor;
  }


  public void setStatementDescriptor(String statementDescriptor) {
    this.statementDescriptor = statementDescriptor;
  }


  public InvoiceRequest billingAddress(AddressRequest billingAddress) {
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BILLING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressRequest getBillingAddress() {
    return billingAddress;
  }


  public void setBillingAddress(AddressRequest billingAddress) {
    this.billingAddress = billingAddress;
  }


  public InvoiceRequest shippingAddress(AddressRequest shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressRequest getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(AddressRequest shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public InvoiceRequest invoiceLineItems(List<InvoicelineItemRequest> invoiceLineItems) {
    
    this.invoiceLineItems = invoiceLineItems;
    return this;
  }

  public InvoiceRequest addInvoiceLineItemsItem(InvoicelineItemRequest invoiceLineItemsItem) {
    this.invoiceLineItems.add(invoiceLineItemsItem);
    return this;
  }

   /**
   * Get invoiceLineItems
   * @return invoiceLineItems
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INVOICE_LINE_ITEMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<InvoicelineItemRequest> getInvoiceLineItems() {
    return invoiceLineItems;
  }


  public void setInvoiceLineItems(List<InvoicelineItemRequest> invoiceLineItems) {
    this.invoiceLineItems = invoiceLineItems;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceRequest invoiceRequest = (InvoiceRequest) o;
    return Objects.equals(this.currencyCode, invoiceRequest.currencyCode) &&
        Objects.equals(this.customerGid, invoiceRequest.customerGid) &&
        Objects.equals(this.note, invoiceRequest.note) &&
        Objects.equals(this.issueDate, invoiceRequest.issueDate) &&
        Objects.equals(this.customerNote, invoiceRequest.customerNote) &&
        Objects.equals(this.daysUntilDue, invoiceRequest.daysUntilDue) &&
        Objects.equals(this.status, invoiceRequest.status) &&
        Objects.equals(this.description, invoiceRequest.description) &&
        Objects.equals(this.statementDescriptor, invoiceRequest.statementDescriptor) &&
        Objects.equals(this.billingAddress, invoiceRequest.billingAddress) &&
        Objects.equals(this.shippingAddress, invoiceRequest.shippingAddress) &&
        Objects.equals(this.invoiceLineItems, invoiceRequest.invoiceLineItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, customerGid, note, issueDate, customerNote, daysUntilDue, status, description, statementDescriptor, billingAddress, shippingAddress, invoiceLineItems);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceRequest {\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customerGid: ").append(toIndentedString(customerGid)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    customerNote: ").append(toIndentedString(customerNote)).append("\n");
    sb.append("    daysUntilDue: ").append(toIndentedString(daysUntilDue)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    statementDescriptor: ").append(toIndentedString(statementDescriptor)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    invoiceLineItems: ").append(toIndentedString(invoiceLineItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

